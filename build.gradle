	/*
	 * This file was generated by the Gradle 'init' task.
	 *
	 * This generated file contains a sample Java Library project to get you started.
	 * For more details take a look at the Java Libraries chapter in the Gradle
	 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
	 /**
	 * @author Balaji Singh
	 * Email id : balaji.singhy@conduent.com
	 *         
	 */
	 
  
  buildscript
	 {
	
	   repositories
	    { 
	      jcenter()
	      mavenCentral()
	    }
	    dependencies
	     {
	          classpath 'gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0'
	     }
	    
	  }
   
   
	
	plugins {
			    // Apply the java-library plugin to add support for Java Library
			    id 'java'
				//id 'io.qameta.allure' version '2.8.1'
				id 'java-library'
				id "ua.eshepelyuk.ManifestClasspath" version "1.0.0"
				
		   }
	
	
	
	
	compileTestJava {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
		//options.compilerArgs += '-parameters'
		group 'com.commonorg'
	    version '1.0-SNAPSHOT'
	}
	
	
	repositories {
	    // Use jcenter for resolving dependencies.
	    // You can declare any Maven/Ivy/file repository here.
	   
		mavenCentral()
		//maven { url "https://jitpack.io" }
		 jcenter()
	}
	
				
	
	ext {
             
             //Selenium Api
            // seleniumServerversion = '4.0.0-alpha-2'    // old and actual
		    // seleniumVersion = '4.1.1'                  // old and acutal
		     seleniumHtmlUnitDriverVersion = '2.52.0'   
		    
		     seleniumServerversion = '4.0.0-alpha-2'
		     seleniumjavaVersion = '4.9.1'
		     
		     //Appium
		     appiumjavaClientVersion =  '8.5.1'   ///'8.0.0'  // 7.3.0 // 6.1.0 //8.0.0 //7.6.0 //8.1.0//8.5.1
		     
		     
		     //WebDriverManager
		     webdriverManagerVersion = '5.2.0'
		     
		     //Cucumber
             cucumberVersion = '7.2.3'             
             
             //Azure
	         azureSDKVersion = '1.36.3'
		     azureClientAuthVersion = '1.0.0-beta1'
		     azureStorageClientSDKVersion = '8.6.5'
		     azureBlobStorageVersion = '12.0.0'
		     azureCommonStorageVersion = '12.9.0-beta.2'
		     
		     		     
		     //Log4j
		     Log4jVersion = '1.2.17'
		     
		     //slf4j-api
		     slf4jVersion = '1.7.30'
		     
		     //ApachePOI
		     apachePOIVersion = '3.9'
		     xmlBeansVersion = '2.3.0'
		     
		     //commons-configuration
	         commonsConfigurationVersion = '1.10'
	         
	         
	         //Rest Assured Apis
			 jsonSchemaValidatorVersion = '4.3.3' 
			 restassuredVersion = '4.4.0'
			 jsonsimpleVersion = '1.1.1'
			 orgJSONVersion = '20140107'
         
	           
	           
	         //FasterXML (Jackson)
			  fasterXMLJacksonCoreVersion = '2.11.3'
			  fasterXMLJacksonAnnotationsVersion = '2.11.3'

			//Commons
			  commonsCodecVersion = '1.6'
			  commonsLoggingVersion = '1.1.3'
			
			//Dom4j
			  dom4jVersion = '2.1.3'
			
			//Okio
			  okioVersion = '1.13.0'
			
			//TestNg
			  testngVersion = '6.13.1'
			
			//Unirest java
			  unirestVersion = '1.4.7'
			
			//JSON SIMPLE
			  jsonsimpleVersion = '1.1.1'
			
			//Netty Jar
			  nettyAllVersion = '4.1.31.Final'
			
			//AspectJweaver
			  aspectJWeaverVersion = '1.9.6'
			
			//Hamcrest
			  hamcrestVersion = '1.3'
			
			//MongoDB
			  mongoJavaDriverVersion = '3.12.7'
			
			//SqlServer
			  microsoftSqlServerVersion = '7.2.1.jre8'		 
			  
		    //JMeter
		      def apacheJMeterVersion = '2.2'
			  def jdkIntClassesVersion = '4.5'	  
			  	  
			//HttpComponents  	  
			  httpcomponentsVersion = '4.5.13'
			  
		    //ExtentReport	  
   			  extentreportVersion = '5.0.3'
   			
   			//spullara mustache java compiler   
    		  mustacheVersion = '0.9.6' 	  
    		  
    		//Allure
    		  allurePluginVersion = '2.8.1'
	          allurecucumber4jvmVersion = '2.13.0'
	          codeborneselenideVersion = '5.3.1'
    		  
        }

	dependencies {
	
	
	     
	
	    //--------------------------------------courgette Dependency ----------------------------------------------------	
	
            implementation group: 'io.github.prashant-ramcharan', name: 'courgette-jvm', version: '6.5.0'    //6.5.0
		
			
		//-----------------------------------Selenium Apis---------------------------------------------------------------
			// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-server
	        implementation group: 'org.seleniumhq.selenium', name: 'selenium-server', version: seleniumServerversion
	        implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumjavaVersion
			implementation group: 'org.seleniumhq.selenium', name: 'selenium-htmlunit-driver', version: seleniumHtmlUnitDriverVersion
			implementation 'com.paulhammant:ngwebdriver:1.1.4'	
		
		//--------------------------------------Webdriver manager-------------------------------------------------------
			// https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
		    implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: webdriverManagerVersion


       	//-----------------------------------------Cucumber------------------------------------------------------------	
		
			// https://mvnrepository.com/artifact/io.cucumber/cucumber-core
	        implementation group: 'io.cucumber', name: 'cucumber-core', version: cucumberVersion
			// https://mvnrepository.com/artifact/io.cucumber/cucumber-java
			implementation group: 'io.cucumber', name: 'cucumber-java', version: cucumberVersion
			// https://mvnrepository.com/artifact/io.cucumber/cucumber-java8
	        //implementation group: 'io.cucumber', name: 'cucumber-java8', version: cucumberVersion
			// https://mvnrepository.com/artifact/io.cucumber/cucumber-junit
	       // testImplementation group: 'io.cucumber', name: 'cucumber-junit', version: cucumberVersion
			// https://mvnrepository.com/artifact/io.cucumber/cucumber-testng
	        implementation group: 'io.cucumber', name: 'cucumber-testng', version: cucumberVersion	   	   
	        
	        // https://mvnrepository.com/artifact/io.cucumber/cucumber-jvm-deps
	        compileOnly group: 'io.cucumber', name: 'cucumber-jvm-deps', version: '1.0.6'	        
	        
	        // https://mvnrepository.com/artifact/io.cucumber/gherkin
	        //implementation group: 'io.cucumber', name: 'gherkin', version: gherkinVersion
	        
	        
	        
	    //---------------------------------------TestNg--------------------------------------------------------------------------
			//testImplementation "org.testng:testng:${testngVersion}"
			//testCompile group: 'org.testng', name: 'testng', version: '6.13.1'
			implementation group: 'org.testng', name: 'testng', version: testngVersion
		   
	        
	    //-------------------------------------Azure-----------------------------------------------------------------------
			//Azure SDK
			implementation group: 'com.microsoft.azure', name: 'azure', version: azureSDKVersion
			//Azure Client Authentication
			implementation group: 'com.microsoft.azure', name: 'azure-client-authentication', version: azureClientAuthVersion
			//Azure Storage Client SDK
			implementation group: 'com.microsoft.azure', name: 'azure-storage', version: azureStorageClientSDKVersion
			//Azure Blob Storage
			implementation group: 'com.azure', name: 'azure-storage-blob', version: azureBlobStorageVersion
			//Azure Common Storage
			implementation group: 'com.azure', name: 'azure-storage-common', version: azureCommonStorageVersion
	        
	        
	      
	   //-------------------------------------Appium------------------------------------------------------------------------------
			//implementation "io.appium:java-client:${appiumjavaClientVersion}"
			// https://mvnrepository.com/artifact/io.appium/java-client
           implementation group: 'io.appium', name: 'java-client', version: appiumjavaClientVersion
			
		
	   //-------------------------------------Log4j Logs------------------------------------------------------------------------------
			implementation "log4j:log4j:${Log4jVersion}"  //Do not change from implementation to testImplementation otherwise  PropertyConfigurator and Logger will throw errors
		
			implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
			testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: slf4jVersion   
	      
	        
	        
	   //-------------------------------------ApachePOI--------------------------------------------------------------------------------
		  //POI	
			implementation group: 'org.apache.poi', name: 'poi', version: apachePOIVersion
		  //POI OOXML
			implementation group: 'org.apache.poi', name: 'poi-ooxml', version: apachePOIVersion
		  //POI OOXML Schemas
			implementation group: 'org.apache.poi', name: 'poi-ooxml-schemas', version: apachePOIVersion
		  //XMLBeans
			implementation group: 'org.apache.xmlbeans', name: 'xmlbeans', version: xmlBeansVersion
			     
	        	        
	   //-------------------------------------commons-configuration--------------------------------------------------------------------------------	
			implementation group: 'commons-configuration', name: 'commons-configuration', version: commonsConfigurationVersion
		
		
   	   //-------------------------------------Json Schema validator--------------------------------------------------------------------------------
		   //Json Schema validator	
			 implementation group: 'io.rest-assured', name: 'json-schema-validator', version: jsonSchemaValidatorVersion
			        
	        
	   //-------------------------------------Rest Assured Apis--------------------------------------------------------------------------------	
		   //Rest Assured Apis
			 // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
			// testImplementation group: 'io.rest-assured', name: 'rest-assured', version: restassuredVersion
			//compile "io.rest-assured:rest-assured:${restassuredVersion}"
			
			implementation group: 'io.rest-assured', name: 'rest-assured', version: restassuredVersion
			 
			 testImplementation "com.googlecode.json-simple:json-simple:${jsonsimpleVersion}"
			 // https://mvnrepository.com/artifact/io.rest-assured/json-path
			 implementation group: 'io.rest-assured', name: 'json-path', version: '4.3.3'		
			 // https://mvnrepository.com/artifact/org.json/json
			 implementation group: 'org.json', name: 'json', version: '20190722'


	    //----------------------------------------FasterXML (Jackson)----------------------------------------------------------------------	
		 	//Jackson Core
			 implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: fasterXMLJacksonCoreVersion
		    //Jackson Annotations
			 implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: fasterXMLJacksonAnnotationsVersion
		        
        
        //-----------------------------------------Commons-------------------------------------------------------------------------
			//Commons Codec
				implementation group: 'commons-codec', name: 'commons-codec', version: commonsCodecVersion
			//Commons Logging
				implementation group: 'commons-logging', name: 'commons-logging', version: commonsLoggingVersion


   		//-----------------------------------------Dom4j-------------------------------------------------------------------------
			implementation group: 'org.dom4j', name: 'dom4j', version: dom4jVersion
		

        //-----------------------------------------Okio-------------------------------------------------------------------------		
			implementation group: 'com.squareup.okio', name: 'okio', version: okioVersion
		
			            
        //---------------------------------------Unirest java------------------------------------------------------------
			implementation group: 'com.mashape.unirest', name: 'unirest-java', version: unirestVersion
			
	    //--------------------------------------JSON SIMPLE -----------------------------------------------------
			implementation group: 'org.json', name: 'json', version: orgJSONVersion
			implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: jsonsimpleVersion
		

	   //---------------------------------------Netty Jar is important-----------------------------------------------
			implementation group: 'io.netty', name: 'netty-all', version: nettyAllVersion


       //---------------------------------------AspectJweaver--------------------------------------------------------
			implementation group: 'org.aspectj', name: 'aspectjweaver', version: aspectJWeaverVersion

	
       //---------------------------------------Hamcrest-------------------------------------------------------------
			testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
		
		
	   //---------------------------------------MongoDB--------------------------------------------------------------
		    implementation group: 'org.mongodb', name: 'mongo-java-driver', version: mongoJavaDriverVersion


	   //----------------------------------------SqlServer-------------------------------------------------------------
			// https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
			implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: microsoftSqlServerVersion	
			
			
	   //---------------------------------------Java Email artifacts------------------------------------------------------------
			// https://mvnrepository.com/artifact/javax.mail/javax.mail-api
			implementation group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
			
			// https://mvnrepository.com/artifact/com.sun.mail/javax.mail
			implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'
			
			// https://mvnrepository.com/artifact/javax.mail/mail
			implementation group: 'javax.mail', name: 'mail', version: '1.4.7'
			
			
			// https://mvnrepository.com/artifact/javax.activation/activation
			implementation group: 'javax.activation', name: 'activation', version: '1.1.1'
			
			// https://mvnrepository.com/artifact/com.sun.mail/imap
			implementation group: 'com.sun.mail', name: 'imap', version: '1.6.0'
			
			// https://mvnrepository.com/artifact/com.sun.mail/pop3
			implementation group: 'com.sun.mail', name: 'pop3', version: '2.0.1'
			
			
		//-------------------------------------BrowserStack--------------------------------------------------------------------		
			// https://mvnrepository.com/artifact/com.browserstack/browserstack-local-java
			  implementation group: 'com.browserstack', name: 'browserstack-local-java', version: '1.0.6'

			
		//-------------------------------------LambdaTest--------------------------------------------------------------------			
			
			// https://mvnrepository.com/artifact/de.tototec/de.tobiasroeser.lambdatest
			testImplementation group: 'de.tototec', name: 'de.tobiasroeser.lambdatest', version: '0.6.2'
			
						
	    //----------------------------Httpcomponents---------------------------------------------------------------------------
	        implementation "org.apache.httpcomponents:httpclient:$httpcomponentsVersion"
            implementation "org.apache.httpcomponents:httpmime:$httpcomponentsVersion"		
			
			
		//--------extentreports------------------------------------------------------------------------------------------------
		    implementation "com.aventstack:extentreports:$extentreportVersion"
		    
		//----------- mustache.java:compiler ----------------------------------------------------------------------------------   
            implementation "com.github.spullara.mustache.java:compiler:$mustacheVersion"	
            
       //---------------------Allure Reports Dependency -----------------------------------------------------------------------          
          // https://mvnrepository.com/artifact/io.qameta.allure/allure-cucumber7-jvm
		  implementation group: 'io.qameta.allure', name: 'allure-cucumber7-jvm', version: '2.18.1'
           

       //-------------------------------Andiod os --------------------------------------------------------------------------
       
        // https://mvnrepository.com/artifact/com.google.android/android
        compileOnly group: 'com.google.android', name: 'android', version: '4.1.1.4'
        
         
	}
	
	/*
	configurations {
	                       cucumberRuntime.extendsFrom testCompile,Implementation
	                 }
	                 
	  */       
	
	
	 sourceSets {
        main {
            java {
                srcDirs = ['src/main/java','src/test/java']
            }
            resources {
                srcDirs = ['src/main/resources','src/test/resources']
            }
            
        }
    }
	

	
	//To Delete the log4j file from Automation_report folder and a new empty lOG4j File will get created during each run
	task deleteLog4jFile(type: Delete)
	{
		def dirName = "Automation_Report/Log4j_logs"
		file( dirName ).list().each{
			f -> delete "${dirName}/${f}"
		}
	}

 
	
	
 	
	//To Delete previous run Screenshots from ScreenshotsFailure folder
	task deletePreviousScreenshotsImages(type: Delete)
	{
		def dirName = "Automation_Report/ScreenshotsFailure"
		file( dirName ).list().each{
			f -> delete "${dirName}/${f}"
		}
	}
	
 	
		
	tasks.withType(Test) {
	systemProperties = System.getProperties()
	systemProperties.remove("java.endorsed.dirs")
  }
	
	
		/* TestNG Specific Tasks
	----------------------------------------------------
	*/
	task runTest(type: Test, dependsOn: compileTestJava) {
		useTestNG()
	    
		
	    systemProperty "UserRole", project.findProperty("role") ?: ""
		systemProperty "environment", project.findProperty("env") ?: "QA"
		systemProperty "platform", project.findProperty("plt")  ?: "UI"
		systemProperty "browser", project.findProperty("browser")  ?: "CHROME"
		systemProperty "bsBrowser", project.findProperty("bsBrowser") ?: "CHROME"
		systemProperty "bsBrowserVersion", project.findProperty("bsBrowserVersion")
		systemProperty "bsDevice", project.findProperty("bsDevice")  ?: "Desktop"
		systemProperty "bsDesktopOS", project.findProperty("bsDesktopOS")  ?: "Windows"
		systemProperty "bsOSVersion", project.findProperty("bsOSVersion")  ?: "10"
		systemProperty "bsMobileOS", project.findProperty("bsMobileOS")  ?: "Android"
		systemProperty "cucumber.tags", project.findProperty("testTag")  ?: "@sanity"
		systemProperty "courgette.threads", project.findProperty("threads")  ?: "1"
		systemProperty "courgette.rerunFailedScenarios", project.findProperty("rerunfailed")  ?: "false"
		systemProperty "Product", project.findProperty("product")  ?: "CommonOrg"
	
		include 'src/main/java/*.class'
		include 'src/test/java/*.class'
		include 'src/main/resources/configfile/*.*'
		include 'src/test/resources/*.*'
	
		include '**/ny/test/runners/Ny_MobileApp_Runner.class' // pass the runner class path
		//include '**/suites/testng/ChromeTestSuite.class'
	
		outputs.upToDateWhen { false }
	}
		
	
		
	static def getDate() {
		return new Date().format('ddMMMyyyy_HH_mm')
	}


	def archiveFileName(){
	
		if (project.findProperty("plt").toString().equalsIgnoreCase("browserstack")){
			return (project.findProperty("testTag").toString().replace(" ","").replace("or","_")+ "_"+
					project.findProperty("env").toString().toUpperCase()+"_"+
					project.findProperty("bsDevice").toString().toUpperCase()+"_"+
					getDate()).replace("@","").toUpperCase()
		}else{
			return (project.findProperty("testTag").toString().replace(" ","").replace("or","_")+ "_"+
					project.findProperty("env").toString()+"_"+
					getDate()).replace("@","").toUpperCase()
		}
	
	}

	task archiveReports(type: Zip) {
		archiveFileName = archiveFileName()+".zip"
		destinationDirectory = file("Archive")
		from "./Automation_Report"
	
	}
	
	
	
	runTest.finalizedBy 'archiveReports'
		
